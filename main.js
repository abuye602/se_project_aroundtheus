!function(){"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_handleDeleteCard(){this._element.remove(),this._element=null}_handleLikeIcon(){this._element.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_setEventListeners(){this._element.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._element.querySelector(".card__trash").addEventListener("click",(()=>{this._handleDeleteCard()})),this._element.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}getView(){return this._element=this._getTemplate(),this._element.querySelector(".card__title").textContent=this._name,this._element.querySelector(".card__image").src=this._link,this._element.querySelector(".card__image").alt=this._name,console.log("Image Source: ",this._link),this._setEventListeners(),this._element}}class t{constructor(e,t){this._settings=e,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)}_showInputError(e,t){const s=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._settings.inputErrorClass),s.textContent=t,s.classList.add(this._settings.errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._settings.inputErrorClass),t.textContent="",t.classList.remove(this._settings.errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableSubmitButton():(this._submitButton.classList.remove(this._settings.inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}disableSubmitButton(){this._submitButton.classList.add(this._settings.inactiveButtonClass),this._submitButton.disabled=!0}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(e=>{e.target===this._popupElement&&this.close()}))}}class n extends s{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._handleFormSubmit=s,this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__input"),this.setEventListeners()}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset(),super.close()})),super.setEventListeners()}}const i={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=new class extends s{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._imageElement=this._popupElement.querySelector(".modal__preview-img"),this._captionElement=this._popupElement.querySelector("#img-name")}open(e,t){this._imageElement.src=t,this._imageElement.alt=e,this._captionElement.textContent=e,super.open()}}({popupSelector:"#img-preview-modal"});o.setEventListeners();const r=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}}({nameSelector:".profile__title",jobSelector:".profile__description"}),l=document.querySelector("#edit-modal"),a=document.querySelector("#add-card-modal"),c=l.querySelector(".modal__form"),u=a.querySelector(".modal__form"),m=new t(i,c),d=new t(i,u);function _(t){return new e(t,"#card-template",((e,t)=>{o.open(e,t)})).getView()}m.enableValidation(),d.enableValidation();const p=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s||[],this._renderer=n,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=_(e);p.addItem(t)}},".cards__list");p.renderItems();const h=new n({popupSelector:"#add-card-modal",handleFormSubmit:e=>{const t=_({name:e.title,link:e.url});p.addItem(t),h.close(),u.reset(),d.disableSubmitButton()}});document.querySelector(".profile__add-button").addEventListener("click",(()=>{h.open()}));const E=new n({popupSelector:"#edit-modal",handleFormSubmit:e=>{r.setUserInfo({name:e.title,job:e.description}),E.close()}});document.querySelector("#profile-edit-button").addEventListener("click",(()=>{const e=r.getUserInfo();document.querySelector("#profile-title-input").value=e.name,document.querySelector("#profile-description-input").value=e.job,m.resetValidation(),E.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,